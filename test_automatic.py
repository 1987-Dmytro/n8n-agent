#!/usr/bin/env python3
"""
üß™ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ N8N Main Service
"""

import sys
import os
sys.path.append('/Users/hdv_1987/Desktop/Projects/N8N-Agent/core')

from n8n_main_service import N8NMainService

def test_automatic():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Main Service"""
    
    print("üß™ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï N8N MAIN SERVICE")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å (Mock —Ä–µ–∂–∏–º)
    service = N8NMainService(use_mock_claude=True)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä
    description = "–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ webhook –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Slack —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ–±—ã—Ç–∏–∏"
    params = {"complexity": "–ü—Ä–æ—Å—Ç–∞—è", "auto_activate": False}
    
    print(f"\nüìù –¢–µ—Å—Ç–∏—Ä—É–µ–º: {description}")
    
    # –°–æ–∑–¥–∞–µ–º workflow
    result = service.create_workflow_from_description(description, params)
    
    print(f"\nüìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"–°—Ç–∞—Ç—É—Å: {result['status']}")
    
    if result['status'] == 'success':
        workflow = result['workflow']
        print(f"‚úÖ Workflow —Å–æ–∑–¥–∞–Ω: {workflow['name']}")
        print(f"üîó URL: {workflow['url']}")
        print(f"üÜî ID: {workflow['id']}")
        print(f"üîß Nodes: {workflow['nodes_count']}")
        print(f"üîó Connections: {workflow['connections_count']}")
        print(f"‚ö° –ê–∫—Ç–∏–≤–µ–Ω: {'–î–∞' if workflow['active'] else '–ù–µ—Ç'}")
        
        print(f"\nüéâ –ü–û–õ–ù–´–ô –ü–ê–ô–ü–õ–ê–ô–ù –†–ê–ë–û–¢–ê–ï–¢!")
        print(f"üìã –û—Ç –æ–ø–∏—Å–∞–Ω–∏—è –¥–æ –≥–æ—Ç–æ–≤–æ–≥–æ workflow –≤ n8n!")
        
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ: {result.get('stage', 'unknown')}")
        print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {result['message']}")
        
        return False

if __name__ == "__main__":
    success = test_automatic()
    if success:
        print(f"\nüèÜ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
    else:
        print(f"\n‚ùå –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –° –û–®–ò–ë–ö–ê–ú–ò")
